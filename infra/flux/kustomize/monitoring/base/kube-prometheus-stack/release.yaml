---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: kube-prometheus-stack
spec:
  releaseName: kube-prometheus-stack
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: "34.10.0"
  test:
    enable: true
  interval: 1m
  valuesFrom:
    - kind: ConfigMap
      name: kube-prometheus-stack-helm-values
  values:
    alertmanager:
      enabled: false
    prometheus:
      serviceAccount:
        name: thanos
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        thanos:
          image: quay.io/thanos/thanos:v0.23.1
          objectStorageConfig:
            name: thanos-secret
            key: objstore.yml
        scrapeInterval: 1m
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        replicaExternalLabelName: "__replica__"
    grafana:
      enabled: true
      grafana.ini:
        server:
          enable_gzip: true
        security:
          disable_gravatar: true
        feature_toggles:
          enable: tempoSearch tempoBackendSearch
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
            - name: Prometheus
              uid: prometheus
              type: prometheus
              access: proxy
              # yamllint disable-line rule:line-length
              url: http://thanos-query.kube-prometheus-stack.svc.cluster.local:9090
              version: 1
              editable: false
            - name: Loki
              uid: loki
              type: loki
              access: proxy
              url: http://loki.loki:3100
              version: 1
              editable: false
              jsonData:
                derivedFields:
                  - datasourceName: Tempo
                    matcherRegex: "x_b3_traceid=(\\w+)"
                    name: TraceID
                    url: "$${__value.raw}"
                    datasourceUid: tempo
            - name: Tempo
              uid: tempo
              type: tempo
              access: proxy
              url: http://tempo-tempo-distributed-query-frontend.tempo:3100
              version: 1
              editable: false
              jsonData:
                tracesToLogs:
                  datasourceUid: loki
                  mapTagNamesEnabled: true
                  filterByTraceID: true
                  filterBySpanID: true
              nodeGraph:
                enabled: true
              lokiSearch:
                datasourceUid: loki
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: default
              orgId: 1
              folder: ""
              type: file
              disableDeletion: true
              editable: false
              options:
                path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          istio-workload:
            gnetId: 7630
            revision: 115
            datasource: Prometheus
          istio-service:
            gnetId: 7636
            revision: 115
            datasource: Prometheus
          istio-mesh:
            gnetId: 7639
            revision: 115
            datasource: Prometheus
          istio-control-plane:
            gnetId: 7645
            revision: 115
            datasource: Prometheus
          istio-performance:
            gnetId: 11829
            revision: 115
            datasource: Prometheus
    kube-state-metrics:
      selfMonitor:
        enabled: true
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: kube-prometheus-stack
spec:
  releaseName: thanos
  chart:
    spec:
      chart: thanos
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      version: "8.2.5"
  test:
    enable: true
  dependsOn:
    - name: kube-prometheus-stack
      namespace: kube-prometheus-stack
  interval: 1m
  values:
    # NOTE: use serviceaccount of prometheus operator
    existingServiceAccount: thanos
    existingObjstoreSecret: thanos-secret
    query:
      # NOTE: use replicaExternalLabelName of prometheus operator
      replicaLabel: "__replica__"
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: kube-prometheus-stack
    bucketweb:
      enabled: true
    storegateway:
      enabled: true
      # prevent volume node affinity conflict
      persistence:
        enabled: false
    compactor:
      enabled: true
      # prevent volume node affinity conflict
      persistence:
        enabled: false
      retentionResolutionRaw: 4h
      retentionResolution5m: 4h
      retentionResolution1h: 8h
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
