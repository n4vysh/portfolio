---
default_language_version:
  python: 3.10.0
  node: 17.1.0
repos:
  # frontend
  - repo: local
    hooks:
      - id: deno-fmt
        alias: frontend
        name: format js, ts, tsx, md, and json files with deno fmt
        language: system
        entry: deno fmt
        types_or: [javascript, ts, tsx, markdown, json]
      - id: deno-lint
        alias: frontend
        name: check ts and tsx files with deno lint
        language: system
        entry: deno lint
        types_or: [ts, tsx]
      - &stylelint
        id: stylelint
        alias: frontend
        name: format css files with stylelint
        language: node
        language_version: 17.1.0
        types: [css]
        minimum_pre_commit_version: 0.7.0
        additional_dependencies:
          - "stylelint@14.1.0"
          - "stylelint-config-standard@24.0.0"
          - "stylelint-config-recess-order@3.0.0"
          - "stylelint-config-prettier@9.0.3"
        entry: stylelint --cache
        args: [--fix]
      - name: check css files with stylelint
        args: []
        <<: *stylelint
      - id: build-static-site
        alias: frontend
        name: check ts, tsx, and css files with aleph build
        language: system
        entry: just build-static-site
        types_or: [ts, tsx, css]
        exclude: scripts/*$
        pass_filenames: false
      - id: lhci
        alias: frontend
        name: check with lhci
        language: node
        # https://github.com/GoogleChrome/lighthouse/issues/13258
        language_version: 16.13.0
        entry: lhci autorun
        types_or: [ts, tsx, css]
        additional_dependencies: ["@lhci/cli@0.8.2", "puppeteer@11.0.0"]
        pass_filenames: false
  # config
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v2.5.1
    hooks:
      - id: prettier
        alias: config
        types_or: [yaml, css]
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.26.3
    hooks:
      - id: yamllint
        alias: config
  - repo: local
    hooks:
      - id: taplo-format
        alias: config
        name: format toml files with taplo format
        language: node
        entry: taplo format
        types: [toml]
        additional_dependencies: ["@taplo/cli@0.3.2"]
      - id: taplo-lint
        alias: config
        name: check toml files with taplo lint
        language: node
        entry: taplo lint
        types: [toml]
        additional_dependencies: ["@taplo/cli@0.3.2"]
      - id: just
        alias: config
        name: format justfile with just --fmt option
        language: system
        entry: just --fmt --unstable
        files: justfile$
        pass_filenames: false
  # container
  - repo: https://github.com/hadolint/hadolint
    rev: v2.8.0
    hooks:
      - id: hadolint-docker
        alias: container
  - repo: local
    hooks:
      - id: build-container-image
        alias: container
        name: check nginx.conf, project.toml, and buildpack.yml with skaffold
        language: system
        entry: sh -c 'mkdir dist/; just build-container-image'
        files: |
          (?x)^(
              nginx.conf|
              project.toml|
              buildpack.yml|
              skaffold.yaml
          )$
        pass_filenames: false
  # markup
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.30.0
    hooks:
      - id: markdownlint
        alias: markup
      - id: markdownlint-fix
        alias: markup
  - repo: local
    hooks:
      - id: markdown-link-check
        alias: markup
        name: check link in markdown files with markdown-link-check
        language: node
        types: [markdown]
        minimum_pre_commit_version: 0.7.0
        additional_dependencies:
          - markdown-link-check@3.8.7
        entry: markdown-link-check --config .markdown-link-check.json
  - repo: local
    hooks:
      - &textlint
        id: textlint
        alias: markup
        name: fix text files with textlint
        language: node
        language_version: 17.1.0
        types: [markdown]
        minimum_pre_commit_version: 0.7.0
        additional_dependencies:
          - "textlint@12.0.2"
          - "textlint-rule-no-todo@2.0.1"
          - "textlint-rule-no-start-duplicated-conjunction@2.0.2"
          - "textlint-rule-max-number-of-lines@1.0.3"
          - "textlint-rule-max-comma@2.0.2"
          - "textlint-rule-no-exclamation-question-mark@1.1.0"
          - "textlint-rule-period-in-list-item@0.3.2"
          - "@textlint-rule/textlint-rule-no-invalid-control-character@2.0.0"
          - "@textlint-rule/textlint-rule-no-unmatched-pair@1.0.8"
          - "@textlint-rule/textlint-rule-no-duplicate-abbr@1.0.2"
          - "textlint-rule-unexpanded-acronym@1.2.4"
          - "textlint-rule-abbr-within-parentheses@1.0.2"
          - "textlint-rule-alex@3.0.0"
          - "textlint-rule-write-good@2.0.0"
          - "textlint-rule-en-max-word-count@1.1.0"
          - "textlint-rule-stop-words@2.0.9"
        entry: textlint
        args: [--fix]
      - name: check text files with textlint
        args: [--cache]
        <<: *textlint
  # shell scripts
  - repo: local
    hooks:
      - id: shfmt
        alias: shell-scripts
        name: format shell scripts with shfmt
        minimum_pre_commit_version: 2.4.0
        language: docker_image
        entry: mvdan/shfmt:v3.4.0 -w
        types: [shell]
      - id: shfmt
        alias: shell-scripts
        name: format .envrc with shfmt
        minimum_pre_commit_version: 2.4.0
        language: docker_image
        entry: mvdan/shfmt:v3.4.0 -w
        files: .envrc$
      - id: shellharden
        alias: shell-scripts
        name: format shell scripts with shellharden
        minimum_pre_commit_version: 1.10.0
        language: rust
        entry: shellharden --replace
        types: [shell]
        additional_dependencies: ["cli:shellharden:4.1.1"]
      - id: shellharden
        alias: shell-scripts
        name: format .envrc with shellharden
        minimum_pre_commit_version: 1.10.0
        language: rust
        entry: shellharden --replace
        files: .envrc$
        additional_dependencies: ["cli:shellharden:4.1.1"]
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.8.0
    hooks:
      - id: shellcheck
        alias: shell-scripts
        name: check shell scripts with shellcheck
      - id: shellcheck
        alias: shell-scripts
        name: check .envrc with shellcheck
        args: [-s, bash]
        files: .envrc$
        types: []
  # git
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: check-added-large-files
        alias: git
      - id: check-case-conflict
        alias: git
      - id: check-merge-conflict
        alias: git
  - repo: local
    hooks:
      - id: commitlint
        alias: git
        name: check commit message with commitlint
        language: node
        minimum_pre_commit_version: 0.7.0
        additional_dependencies:
          - "@commitlint/cli@15.0.0"
          - "@commitlint/config-conventional@15.0.0"
        stages: [commit-msg]
        entry: commitlint --edit
  # file
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: fix-byte-order-marker
        alias: file
  # text
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: trailing-whitespace
        alias: text
        exclude_types: [markdown]
      - id: end-of-file-fixer
        alias: text
  - repo: https://github.com/codespell-project/codespell
    rev: v2.1.0
    hooks:
      - &codespell
        id: codespell
        alias: text
        name: fix common misspellings in text files with codespell
        args: [--write-changes]
      - name: check common misspellings in text files with codespell
        args: []
        <<: *codespell
  # CI
  - repo: https://github.com/rhysd/actionlint
    rev: v1.6.8
    hooks:
      - id: actionlint-docker
        alias: ci
  # artifact
  - repo: local
    hooks:
      - id: ct
        alias: artifact
        name: lint helm chart
        language: docker_image
        entry: quay.io/helmpack/chart-testing:v3.4.0 ct lint --all
        files: ^charts
        pass_filenames: false
      - id: kubeval
        alias: artifact
        name: validate helm chart
        language: system
        entry: sh -c 'helm template portfolio ./charts/portfolio/ | kubeval'
        files: ^charts
        pass_filenames: false
      - id: skaffold
        alias: artifact
        name: check skaffold.yaml with skaffold diagnose
        language: system
        entry: sh -c 'mkdir dist/; skaffold diagnose'
        files: skaffold.yaml
  - repo: https://github.com/stackrox/kube-linter
    rev: 0.2.5
    hooks:
      - id: kube-linter-docker
        alias: artifact
        entry: stackrox/kube-linter:0.2.5-alpine
        args: [lint, charts/portfolio/]
        files: ^charts/portfolio/
        pass_filenames: false
