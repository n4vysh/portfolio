---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: portfolio
  {{- with .Values.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    ignore-check.kube-linter.io/no-read-only-root-fs: paketo-buildpacks/nginx needs write access because it generate nginx.conf
    checkov.io/skip1: CKV_K8S_15=Use IfNotPresent for skaffold dev
    checkov.io/skip2: CKV_K8S_22=paketo-buildpacks/nginx needs write access because it generate nginx.conf
    checkov.io/skip3: CKV_K8S_40=paketo-buildpacks/nginx use 1000 (cnb user) and nginx-prometheus-exporter use 1001
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
    spec:
      automountServiceAccountToken: true # for using mTLS traffic of Linkerd
      securityContext:
        runAsNonRoot: true
      containers:
        - name: nginx
          image: "{{ .Values.image.repository }}@{{ .Values.image.digest | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            runAsUser: 1000 # cnb
            capabilities:
              drop:
                - ALL
          env:
            - name: HOST
              value: {{ .Values.host }}
            - name: PORT
              value: "{{ .Values.port }}"
            - name: STATUS_PORT
              value: "{{ .Values.status.port }}"
          ports:
            - name: root
              containerPort: {{ .Values.port }}
            - name: status
              containerPort: {{ .Values.status.port }}
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.status.port }}
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.status.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx-prometheus-exporter
          # nginx/nginx-prometheus-exporter:0.10.0
          image: "nginx/nginx-prometheus-exporter@sha256:1c6eba17d7768401ba1ed056101fc56ec3e3b5c82e508fdd8968fbcd96ec9574"
          imagePullPolicy: Always
          args:
            - -nginx.scrape-uri=http://localhost:{{ .Values.status.port }}/status
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            runAsUser: 1001
            capabilities:
              drop:
                - ALL
          ports:
            - name: exporter
              containerPort: 9113
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9113
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9113
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
