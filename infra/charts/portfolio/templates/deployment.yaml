---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gin
  namespace: portfolio
  {{- with .Values.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    checkov.io/skip1: CKV_K8S_15=Use IfNotPresent for skaffold dev
    checkov.io/skip2: CKV_K8S_38=Use mTLS of service mesh
    checkov.io/skip3: CKV_K8S_40=Cloud Native Buildpacks use 1000 (cnb user)
    kube-score/ignore: pod-networkpolicy, container-security-context-user-group-id
    # pod-networkpolicy: kind not support NetworkPolicy
    # https://github.com/kubernetes-sigs/kind/issues/842
    # container-security-context-user-group-id: Cloud Native Buildpacks use 1000 (cnb user)
    polaris.fairwinds.com/deploymentMissingReplicas-exempt: "true" # use HPA
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: gin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gin
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - gin
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true # for using mTLS of service mesh
      securityContext:
        runAsNonRoot: true
      containers:
        - name: gin-server
          image: "{{ .Values.image.repository }}@{{ .Values.image.digest | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" }}
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            runAsUser: 1000 # cnb
            capabilities:
              drop:
                - ALL
          env:
            - name: PORTFOLIO_HOST
              value: {{ .Values.host }}
            - name: PORTFOLIO_PORT
              value: "{{ .Values.port }}"
            - name: PORTFOLIO_INTERNAL_PORT
              value: "{{ .Values.internal.port }}"
            - name: GIN_MODE
              value: "{{ .Values.mode }}"
            {{ if .Values.trace.enabled }}
            - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
              value: "{{ .Values.trace.protocol }}"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: "{{ .Values.trace.endpoint }}"
            {{ end }}
          ports:
            - name: public
              containerPort: {{ .Values.port }}
            - name: internal
              containerPort: {{ .Values.internal.port }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.internal.port }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.internal.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
